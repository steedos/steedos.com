name: Docker publish to docker.io and ecr, deploy to k8s

on:
  push:
    tags:
     - 'v**'
jobs:
  docker:
    runs-on: ubuntu-latest
    environment: prod
    strategy:
      matrix:
        node-version: [12.x]
    env:
      STEEDOS_SERVER_API_KEY: ${{ secrets.STEEDOS_SERVER_API_KEY }}
      NEXT_PUBLIC_DEPLOYMENT_URL: https://www.steedos.cn
      NEXT_PUBLIC_STEEDOS_ROOT_URL: https://console.steedos.cn
      NEXT_STATIC_PROPS_REVALIDATE: 3600
      KEYCLOAK_ID: www.steedos.cn
      KEYCLOAK_SECRET: ${{ secrets.KEYCLOAK_SECRET }}
      KEYCLOAK_ISSUER: https://id.steedos.cn/realms/master
      NEXT_PUBLIC_NEXTAUTH_PROVIDER_ID: keycloak
      NEXTAUTH_URL: https://www.steedos.cn
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      STEEDOS_IDENTITY_JWT_SECRET: ${{ secrets.STEEDOS_IDENTITY_JWT_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - uses: docker/login-action@v1
        name: Login Docker Hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Prepare docker image tags
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: steedos/steedos.com
          tag-custom: 1.x-next
          tag-custom-only: ${{ github.ref == 'refs/heads/1.x' }}
          tag-semver: |
            {{version}}
            {{major}}
            {{major}}.{{minor}}
      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            "API_TOKEN=${{ secrets.API_TOKEN }}"
            "KEYCLOAK_SECRET=${{ secrets.KEYCLOAK_SECRET }}"
            "STEEDOS_IDENTITY_JWT_SECRET=${{ secrets.STEEDOS_IDENTITY_JWT_SECRET }}"
            "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}"
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_NINGXIA }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_NINGXIA }}
          aws-region: cn-northwest-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Tag and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.docker_meta.outputs.tags }}
        run: |
          docker pull steedos/steedos.com:latest
          docker tag steedos/steedos.com:latest ${{ env.ECR_REGISTRY }}/ivscode/steedos/steedos.com:${{github.ref_name}}
          docker tag steedos/steedos.com:latest ${{ env.ECR_REGISTRY }}/ivscode/steedos/steedos.com:latest
          docker push ${{ env.ECR_REGISTRY }}/ivscode/steedos/steedos.com:latest
          docker push ${{ env.ECR_REGISTRY }}/ivscode/steedos/steedos.com:${{github.ref_name}}
      - name: Apply Deployment
        uses: Consensys/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: rollout restart deployment steedos-com -n steedos-com